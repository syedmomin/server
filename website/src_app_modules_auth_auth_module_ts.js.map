{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/error/error.component.ts","./src/app/modules/auth/error/error.component.html","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CoreCommonModule } from \"@core/common.module\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { ErrorComponent } from \"./error/error.component\";\r\nimport { CoreDirectivesModule } from \"@core/directives/directives\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\n\r\n// routing\r\nconst routes: Routes = [\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent,\r\n    data: { animation: \"login\" },\r\n  },\r\n  {\r\n    path: \"error\",\r\n    component: ErrorComponent,\r\n    data: { animation: \"error\" },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    ErrorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CoreCommonModule,\r\n    CoreDirectivesModule,\r\n    ToastrModule,\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { CoreConfigService } from '@core/services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n  public coreConfig: any;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(private _coreConfigService: CoreConfigService) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true\r\n        },\r\n        footer: {\r\n          hidden: true\r\n        },\r\n        menu: {\r\n          hidden: true\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false\r\n      }\r\n    };\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\r\n      this.coreConfig = config;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n}\r\n","<!-- Error page-->\r\n<div class=\"misc-wrapper\">\r\n  <a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n    <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n    <h2 class=\"brand-text text-primary ml-1\">Vuexy</h2></a\r\n  >\r\n  <div class=\"misc-inner p-2 p-sm-3\">\r\n    <div class=\"w-100 text-center\">\r\n      <h2 class=\"mb-1\">Page Not Found üïµüèª‚Äç‚ôÄÔ∏è</h2>\r\n      <p class=\"mb-2\">Oops! üòñ The requested URL was not found on this server.</p>\r\n      <a class=\"btn btn-primary mb-2 btn-sm-block\" routerLink=\"/\" rippleEffect>Back to Home</a\r\n      ><img\r\n        class=\"img-fluid\"\r\n        [src]=\"\r\n          coreConfig.layout.skin === 'dark' ? 'assets/images/pages/error-dark.svg' : 'assets/images/pages/error.svg'\r\n        \"\r\n        alt=\"Error page\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- / Error page-->\r\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { AuthenticationService } from \"app/auth/service/authentication.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  //  Public\r\n  public coreConfig: any;\r\n  public loginForm: FormGroup;\r\n  public loading = false;\r\n  public submitted = false;\r\n  public returnUrl: string;\r\n  public error = \"\";\r\n  public passwordTextType: boolean;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _authService: AuthenticationService,\r\n    private _formBuilder: FormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _toastrService: ToastrService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // Login\r\n    this.loading = true;\r\n    this._authService.login(this.loginForm.value).subscribe(\r\n      (res) => {\r\n        this._toastrService.success(\r\n          \"You have successfully logged in as an \" +\r\n            res.userDetail.role +\r\n            \" user to Vuexy. Now you can start to explore. Enjoy! üéâ\",\r\n          \"üëã Welcome, \" + res.userDetail.first_name + \"!\",\r\n          { toastClass: \"toast ngx-toastr\", closeButton: true }\r\n        );\r\n        // redirect to home page\r\n        setTimeout(() => {\r\n          this._router.navigate([\"/customer\"]);\r\n        }, 100);\r\n      },\r\n      (err) => {\r\n        this._toastrService.error(err.error.message, \"Ooops!\", {\r\n          progressBar: true,\r\n          toastClass: \"toast ngx-toastr\",\r\n          closeButton: true,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.loginForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v1 px-2\">\r\n  <div class=\"auth-inner py-2\">\r\n    <!-- Login v1 -->\r\n    <div class=\"card mb-0\">\r\n      <div class=\"card-body\">\r\n        <a href=\"javascript:void(0);\" class=\"brand-logo my-0\">\r\n          <img\r\n            src=\"{{ coreConfig.app.appLogoImage }}\"\r\n            alt=\"brand-logo\"\r\n            height=\"110\"\r\n          />\r\n          <!-- <h2 class=\"brand-text text-primary ml-1\">\r\n            {{ coreConfig.app.appName }}\r\n          </h2> -->\r\n        </a>\r\n\r\n        <h4 class=\"card-title mb-1\">\r\n          Welcome to {{ coreConfig.app.appName }}! üëã\r\n        </h4>\r\n        <p class=\"card-text mb-2\">\r\n          Please sign-in to your account and start the adventure\r\n        </p>\r\n\r\n        <form\r\n          class=\"auth-login-form mt-2\"\r\n          [formGroup]=\"loginForm\"\r\n          (ngSubmit)=\"onSubmit()\"\r\n        >\r\n          <div class=\"form-group\">\r\n            <label for=\"login-email\" class=\"form-label\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"email\"\r\n              class=\"form-control\"\r\n              placeholder=\"john@example.com\"\r\n              aria-describedby=\"login-email\"\r\n              tabindex=\"1\"\r\n              autofocus\r\n              [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.email.errors.email\">\r\n                Email must be a valid email address\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <label for=\"login-password\">Password</label>\r\n            </div>\r\n            <div class=\"input-group input-group-merge form-password-toggle\">\r\n              <input\r\n                [type]=\"passwordTextType ? 'text' : 'password'\"\r\n                formControlName=\"password\"\r\n                class=\"form-control form-control-merge\"\r\n                tabindex=\"2\"\r\n                placeholder=\"¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\"\r\n                aria-describedby=\"login-password\"\r\n                [ngClass]=\"{\r\n                  'is-invalid error': submitted && f.password.errors\r\n                }\"\r\n              />\r\n\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text cursor-pointer\"\r\n                  ><i\r\n                    class=\"feather font-small-4\"\r\n                    [ngClass]=\"{\r\n                      'icon-eye-off': passwordTextType,\r\n                      'icon-eye': !passwordTextType\r\n                    }\"\r\n                    (click)=\"togglePasswordTextType()\"\r\n                  ></i\r\n                ></span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              *ngIf=\"submitted && f.password.errors\"\r\n              class=\"invalid-feedback\"\r\n              [ngClass]=\"{ 'd-block': submitted && f.password.errors }\"\r\n            >\r\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            </div>\r\n          </div>\r\n          <button class=\"btn btn-primary btn-block\" tabindex=\"4\" rippleEffect>\r\n            Sign in\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <!-- /Login v1 -->\r\n  </div>\r\n</div>\r\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","RouterModule","NgbModule","CoreCommonModule","LoginComponent","ErrorComponent","CoreDirectivesModule","ToastrModule","routes","path","component","data","animation","AuthModule","_classCallCheck","forChild","declarations","imports","takeUntil","Subject","_coreConfigService","_unsubscribeAll","config","layout","navbar","hidden","footer","menu","customizer","enableLocalStorage","_createClass","key","value","pipe","subscribe","_this","coreConfig","next","complete","selectors","decls","vars","consts","template","i0","Validators","_authService","_formBuilder","_route","_router","_toastrService","get","loginForm","controls","passwordTextType","submitted","invalid","loading","login","res","success","userDetail","role","first_name","toastClass","closeButton","setTimeout","navigate","err","error","message","progressBar","group","email","required","password","returnUrl","snapshot","queryParams","_this2","ctx"],"sourceRoot":"webpack:///"}