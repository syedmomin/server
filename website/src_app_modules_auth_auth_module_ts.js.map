{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/error/error.component.ts","./src/app/modules/auth/error/error.component.html","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { CoreCommonModule } from \"@core/common.module\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { ErrorComponent } from \"./error/error.component\";\nimport { CoreDirectivesModule } from \"@core/directives/directives\";\nimport { ToastrModule } from \"ngx-toastr\";\n\n// routing\nconst routes: Routes = [\n  {\n    path: \"login\",\n    component: LoginComponent,\n    data: { animation: \"login\" },\n  },\n  {\n    path: \"error\",\n    component: ErrorComponent,\n    data: { animation: \"error\" },\n  },\n];\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreCommonModule,\n    CoreDirectivesModule,\n    ToastrModule,\n  ],\n})\nexport class AuthModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { CoreConfigService } from '@core/services/config.service';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  public coreConfig: any;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {CoreConfigService} _coreConfigService\n   */\n  constructor(private _coreConfigService: CoreConfigService) {\n    this._unsubscribeAll = new Subject();\n\n    // Configure the layout\n    this._coreConfigService.config = {\n      layout: {\n        navbar: {\n          hidden: true\n        },\n        footer: {\n          hidden: true\n        },\n        menu: {\n          hidden: true\n        },\n        customizer: false,\n        enableLocalStorage: false\n      }\n    };\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to config changes\n    this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\n      this.coreConfig = config;\n    });\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n}\n","<!-- Error page-->\n<div class=\"misc-wrapper\">\n  <a class=\"brand-logo\" href=\"javascript:void(0);\">\n    <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\n    <h2 class=\"brand-text text-primary ml-1\">Vuexy</h2></a\n  >\n  <div class=\"misc-inner p-2 p-sm-3\">\n    <div class=\"w-100 text-center\">\n      <h2 class=\"mb-1\">Page Not Found üïµüèª‚Äç‚ôÄÔ∏è</h2>\n      <p class=\"mb-2\">Oops! üòñ The requested URL was not found on this server.</p>\n      <a class=\"btn btn-primary mb-2 btn-sm-block\" routerLink=\"/\" rippleEffect>Back to Home</a\n      ><img\n        class=\"img-fluid\"\n        [src]=\"\n          coreConfig.layout.skin === 'dark' ? 'assets/images/pages/error-dark.svg' : 'assets/images/pages/error.svg'\n        \"\n        alt=\"Error page\"\n      />\n    </div>\n  </div>\n</div>\n<!-- / Error page-->\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { CoreConfigService } from \"@core/services/config.service\";\nimport { AuthenticationService } from \"app/auth/service/authentication.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LoginComponent implements OnInit {\n  //  Public\n  public coreConfig: any;\n  public loginForm: FormGroup;\n  public loading = false;\n  public submitted = false;\n  public returnUrl: string;\n  public error = \"\";\n  public passwordTextType: boolean;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {CoreConfigService} _coreConfigService\n   */\n  constructor(\n    private _coreConfigService: CoreConfigService,\n    private _authService: AuthenticationService,\n    private _formBuilder: FormBuilder,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _toastrService: ToastrService\n  ) {\n    this._unsubscribeAll = new Subject();\n\n    // Configure the layout\n    this._coreConfigService.config = {\n      layout: {\n        navbar: {\n          hidden: true,\n        },\n        menu: {\n          hidden: true,\n        },\n        footer: {\n          hidden: true,\n        },\n        customizer: false,\n        enableLocalStorage: false,\n      },\n    };\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   * Toggle password\n   */\n  togglePasswordTextType() {\n    this.passwordTextType = !this.passwordTextType;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    // Login\n    this.loading = true;\n    this._authService.login(this.loginForm.value).subscribe(\n      (res) => {\n        // console.log(\"check res\", res.role);\n\n        this._toastrService.success(\n          \"You have successfully logged in as an \" +\n            res.userDetail.role +\n            \" user to Vuexy. Now you can start to explore. Enjoy! üéâ\",\n          \"üëã Welcome, \" + res.userDetail.first_name + \"!\",\n          { toastClass: \"toast ngx-toastr\", closeButton: true }\n        );\n        // redirect to home page\n        setTimeout(() => {\n          this._router.navigate([\"/customer\"]);\n        }, 100);\n      },\n      (err) => {\n        console.log(err);\n\n        this._toastrService.error(err.error.message, \"Ooops!\", {\n          progressBar: true,\n          toastClass: \"toast ngx-toastr\",\n          closeButton: true,\n        });\n      }\n    );\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    this.loginForm = this._formBuilder.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", Validators.required],\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n\n    // Subscribe to config changes\n    this._coreConfigService.config\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((config) => {\n        this.coreConfig = config;\n      });\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n}\n","<div class=\"auth-wrapper auth-v1 px-2\">\n  <div class=\"auth-inner py-2\">\n    <!-- Login v1 -->\n    <div class=\"card mb-0\">\n      <div class=\"card-body\">\n        <a href=\"javascript:void(0);\" class=\"brand-logo\">\n          <img\n            src=\"{{ coreConfig.app.appLogoImage }}\"\n            alt=\"brand-logo\"\n            height=\"28\"\n          />\n          <h2 class=\"brand-text text-primary ml-1\">\n            {{ coreConfig.app.appName }}\n          </h2>\n        </a>\n\n        <h4 class=\"card-title mb-1\">\n          Welcome to {{ coreConfig.app.appName }}! üëã\n        </h4>\n        <p class=\"card-text mb-2\">\n          Please sign-in to your account and start the adventure\n        </p>\n\n        <form\n          class=\"auth-login-form mt-2\"\n          [formGroup]=\"loginForm\"\n          (ngSubmit)=\"onSubmit()\"\n        >\n          <div class=\"form-group\">\n            <label for=\"login-email\" class=\"form-label\">Email</label>\n            <input\n              type=\"text\"\n              formControlName=\"email\"\n              class=\"form-control\"\n              placeholder=\"john@example.com\"\n              aria-describedby=\"login-email\"\n              tabindex=\"1\"\n              autofocus\n              [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n            />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\n              <div *ngIf=\"f.email.errors.email\">\n                Email must be a valid email address\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"d-flex justify-content-between\">\n              <label for=\"login-password\">Password</label>\n            </div>\n            <div class=\"input-group input-group-merge form-password-toggle\">\n              <input\n                [type]=\"passwordTextType ? 'text' : 'password'\"\n                formControlName=\"password\"\n                class=\"form-control form-control-merge\"\n                tabindex=\"2\"\n                placeholder=\"¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\"\n                aria-describedby=\"login-password\"\n                [ngClass]=\"{\n                  'is-invalid error': submitted && f.password.errors\n                }\"\n              />\n\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text cursor-pointer\"\n                  ><i\n                    class=\"feather font-small-4\"\n                    [ngClass]=\"{\n                      'icon-eye-off': passwordTextType,\n                      'icon-eye': !passwordTextType\n                    }\"\n                    (click)=\"togglePasswordTextType()\"\n                  ></i\n                ></span>\n              </div>\n            </div>\n            <div\n              *ngIf=\"submitted && f.password.errors\"\n              class=\"invalid-feedback\"\n              [ngClass]=\"{ 'd-block': submitted && f.password.errors }\"\n            >\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            </div>\n          </div>\n          <button class=\"btn btn-primary btn-block\" tabindex=\"4\" rippleEffect>\n            Sign in\n          </button>\n        </form>\n      </div>\n    </div>\n    <!-- /Login v1 -->\n  </div>\n</div>\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","RouterModule","NgbModule","CoreCommonModule","LoginComponent","ErrorComponent","CoreDirectivesModule","ToastrModule","routes","path","component","data","animation","AuthModule","_classCallCheck","forChild","declarations","imports","takeUntil","Subject","_coreConfigService","_unsubscribeAll","config","layout","navbar","hidden","footer","menu","customizer","enableLocalStorage","_createClass","key","value","pipe","subscribe","_this","coreConfig","next","complete","selectors","decls","vars","consts","template","i0","Validators","_authService","_formBuilder","_route","_router","_toastrService","get","loginForm","controls","passwordTextType","submitted","invalid","loading","login","res","success","userDetail","role","first_name","toastClass","closeButton","setTimeout","navigate","err","console","log","error","message","progressBar","group","email","required","password","returnUrl","snapshot","queryParams","_this2","ctx"],"sourceRoot":"webpack:///"}