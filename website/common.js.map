{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/modules/design/service/collarType.service.ts","./src/app/modules/design/service/colorType.service.ts","./src/app/modules/design/service/cuffType.service.ts","./src/app/modules/design/service/placketType.service.ts","./src/app/modules/design/service/stichType.service.ts","./src/app/modules/karigar/service/karigar.service.ts","./src/app/modules/wholesale/service/wholeSale.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollarTypeService {\r\n  private baseUrl = environment.apiUrl\r\n  private path = 'collar-type'\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  create(addData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/create`, addData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-all`, {})\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailById(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-by-id`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/delete`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(updateData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/update`, updateData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ColorTypeService {\r\n  private baseUrl = environment.apiUrl\r\n  private path = 'color-type'\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  create(addData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/create`, addData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-all`, {})\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailById(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-by-id`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/delete`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(updateData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/update`, updateData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CuffTypeService {\r\n  private baseUrl = environment.apiUrl\r\n  private path = 'cuff-type'\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  create(addData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/create`, addData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-all`, {})\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailById(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-by-id`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/delete`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(updateData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/update`, updateData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlacketTypeService {\r\n  private baseUrl = environment.apiUrl\r\n  private path = 'placket-type'\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  create(addData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/create`, addData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-all`, {})\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailById(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-by-id`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/delete`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(updateData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/update`, updateData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StichTypeService {\r\n  private baseUrl = environment.apiUrl\r\n  private path = 'stich-type'\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  create(addData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/create`, addData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-all`, {})\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailById(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-by-id`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/delete`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(updateData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/update`, updateData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KarigarService {\r\n  private baseUrl = environment.apiUrl\r\n  private path = 'karigar'\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  create(addData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/create`, addData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-all`, {})\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailById(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-by-id`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/delete`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(updateData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/update`, updateData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  uploadImage(imageDetails): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${environment.apiUrl}/upload/save-image`, imageDetails)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class WholeSaleService {\r\n  private baseUrl = environment.apiUrl;\r\n  private path = \"wholeSale\";\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  create(addData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/create`, addData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-all`, {})\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailById(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/get-by-id`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(UserId): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/delete`, UserId)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(updateData): Observable<any> {\r\n    return this._http\r\n      .post<any>(`${this.baseUrl}/${this.path}/update`, updateData)\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n  getByCustomerLedger(customerDetail): Observable<any> {\r\n    return this._http\r\n      .post<any>(\r\n        `${this.baseUrl}/${this.path}/getWholeSaleLedger`,\r\n        customerDetail\r\n      )\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n  \r\n  updateCustomerWholeSaleLedger(wholeSaleLedger): Observable<any> {\r\n    return this._http\r\n      .post<any>(\r\n        `${this.baseUrl}/${this.path}/updateWholeSaleLedger`,\r\n        wholeSaleLedger\r\n      )\r\n      .pipe(\r\n        tap((res) => {\r\n          return res;\r\n        })\r\n      );\r\n  }\r\n\r\n}\r\n"],"names":["environment","tap","CollarTypeService","_http","_classCallCheck","apiUrl","_createClass","key","value","addData","post","baseUrl","path","pipe","res","UserId","updateData","factory","providedIn","ColorTypeService","CuffTypeService","PlacketTypeService","StichTypeService","KarigarService","imageDetails","WholeSaleService","customerDetail","wholeSaleLedger"],"sourceRoot":"webpack:///"}